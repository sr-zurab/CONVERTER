# Generated by Django 5.2 on 2025-09-01 13:09

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('MBDOU_INF', '0004_organization_founderauthority'),
    ]

    operations = [
        migrations.CreateModel(
            name='actsSettingThePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год формирования отчета')),
                ('typeAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативный правовой акт: вид')),
                ('receivingBody', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативный правовой акт: принявший орган')),
                ('dateAct', models.DateField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативный правовой акт: дата')),
                ('numberAct', models.PositiveIntegerField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативный правовой акт: номер')),
                ('nameAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативный правовой акт: наименование')),
                ('section', models.PositiveIntegerField(verbose_name='Номер раздела')),
                ('serviceName', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Наименование муниципальной услуги')),
                ('consumerCategory', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Категории потребителей муниципальной услуги')),
                ('codeBasicList', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Код по общероссийскому базовому перечню или федеральному перечню')),
                ('regulatingAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативные правовые акты, регулирующие порядок оказания государственной услуги')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acts_setting_price', to='MBDOU_INF.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Нормативные правовые акты, устанавливающие размер платы',
                'verbose_name_plural': 'Нормативные правовые акты, устанавливающие размер платы (цену, тариф) либо порядок ее установления',
            },
        ),
        migrations.CreateModel(
            name='IndicatorsQualityService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год формирования отчета')),
                ('uniqueNumber', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Уникальный номер реестровой записи')),
                ('contendIndicator1', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 1')),
                ('contendIndicator2', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 2')),
                ('contendIndicator3', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 3')),
                ('conditionIndicator1', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий условия (формы) оказания муниципальной услуги 1')),
                ('conditionIndicator2', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий условия (формы) оказания муниципальной услуги 2')),
                ('qualityIndicator', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель качества муниципальной услуги: наименование показателя')),
                ('unionOfMeasurement', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель качества муниципальной услуги: единица измерения: наименование')),
                ('OKEI', models.PositiveIntegerField(verbose_name='Показатель качества муниципальной услуги: единица измерения: код по ОКЕИ')),
                ('valuesQualityIndicatorNextYear', models.PositiveIntegerField(verbose_name='Значение показателя качества муниципальной услуги: (очередной финансовый год)')),
                ('valuesQualityIndicatorFirstYear', models.PositiveIntegerField(verbose_name='Значение показателя качества муниципальной услуги: (1-й год планового периода)')),
                ('valuesQualityIndicatorSecondYear', models.PositiveIntegerField(verbose_name='Значение показателя качества муниципальной услуги: (2-й год планового периода)')),
                ('percentageDeviations', models.PositiveIntegerField(verbose_name='Допустимые (возможные) отклонения от установленных показателей качества муниципальной услуги: в процентах')),
                ('absoluteValuesDeviations', models.PositiveIntegerField(verbose_name='Допустимые (возможные) отклонения от установленных показателей качества муниципальной услуги: в абсолютных величинах')),
                ('section', models.PositiveIntegerField(verbose_name='Номер раздела')),
                ('serviceName', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Наименование муниципальной услуги')),
                ('consumerCategory', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Категории потребителей муниципальной услуги')),
                ('codeBasicList', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Код по общероссийскому базовому перечню или федеральному перечню')),
                ('regulatingAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативные правовые акты, регулирующие порядок оказания государственной услуги')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators_quality_service', to='MBDOU_INF.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Показатель характеризующий качество услуги',
                'verbose_name_plural': 'Показатели, характеризующие качество муниципальной услуги',
            },
        ),
        migrations.CreateModel(
            name='IndicatorsVolumeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год формирования отчета')),
                ('uniqueNumber', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Уникальный номер реестровой записи')),
                ('contendIndicator1', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 1')),
                ('contendIndicator2', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 2')),
                ('contendIndicator3', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий содержание муниципальной услуги 3')),
                ('conditionIndicator1', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий условия (формы) оказания муниципальной услуги 1')),
                ('conditionIndicator2', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель, характеризующий условия (формы) оказания муниципальной услуги 2')),
                ('volumeIndicator', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель объема муниципальной услуги: наименование показателя')),
                ('unitOfMeasurement', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Показатель объема муниципальной услуги: единица измерения: наименование')),
                ('OKEI', models.PositiveIntegerField(verbose_name='Показатель объема муниципальной услуги:\tединица измерения: единица измерения по ОКЕИ')),
                ('valuesVolumeIndicatorNextYear', models.PositiveIntegerField(verbose_name='Значение показателя объема государственной услуги: (очередной финансовый год)')),
                ('valuesVolumeIndicatorFirstYear', models.PositiveIntegerField(verbose_name='Значение показателя объема государственной услуги: (1-й год планового периода)')),
                ('valuesVolumeIndicatorSecondYear', models.PositiveIntegerField(verbose_name='Значение показателя объема государственной услуги: (2-й год планового периода)')),
                ('amountFeeNextYear', models.PositiveIntegerField(verbose_name='Размер платы (цена, тариф): (очередной финансовый год)')),
                ('amountFeeFirstYear', models.PositiveIntegerField(verbose_name='Размер платы (цена, тариф): (1-й год планового периода)')),
                ('amountFeeSecondYear', models.PositiveIntegerField(verbose_name='Размер платы (цена, тариф): (2-й год планового периода)')),
                ('percentageDeviations', models.PositiveIntegerField(verbose_name='Допустимые (возможные) отклонения от установленных показателей объема муниципальной услуги: в процентах')),
                ('absoluteValuesDeviations', models.PositiveIntegerField(verbose_name='Допустимые (возможные) отклонения от установленных показателей объема муниципальной услуги: в абсолютных величинах')),
                ('section', models.PositiveIntegerField(verbose_name='Номер раздела')),
                ('serviceName', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Наименование муниципальной услуги')),
                ('consumerCategory', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Категории потребителей муниципальной услуги')),
                ('codeBasicList', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Код по общероссийскому базовому перечню или федеральному перечню')),
                ('regulatingAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативные правовые акты, регулирующие порядок оказания государственной услуги')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators_volume_service', to='MBDOU_INF.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Показатель характеризующий объём услуги',
                'verbose_name_plural': 'Показатели, характеризующие объём муниципальной услуги',
            },
        ),
        migrations.CreateModel(
            name='InformingPotentialConsumersOfTheService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год формирования отчета')),
                ('informationMethod', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Способ информирования')),
                ('compositionInformation', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Состав размещаемой информации')),
                ('refreshRate', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Частота обновления информации')),
                ('section', models.PositiveIntegerField(verbose_name='Номер раздела')),
                ('serviceName', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Наименование муниципальной услуги')),
                ('consumerCategory', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Категории потребителей муниципальной услуги')),
                ('codeBasicList', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Код по общероссийскому базовому перечню или федеральному перечню')),
                ('regulatingAct', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='Нормативные правовые акты, регулирующие порядок оказания государственной услуги')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='informing_potential_consumers', to='MBDOU_INF.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Порядок информирования',
                'verbose_name_plural': 'Порядок информирования потенциальных потребителей государственной услуги',
            },
        ),
    ]
